{"ast":null,"code":"import _slicedToArray from\"/media/revgeek/Data/projects/opensource/chuck_norris_jokesAPI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Categories=function Categories(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoaded=_useState4[0],setIsLoaded=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),categories=_useState6[0],setCategories=_useState6[1];useEffect(function(){fetch(\"https://api.chucknorris.io/jokes/categories\").then(function(res){return res.json();}).then(function(data){setIsLoaded(true);setCategories(data);},function(error){setIsLoaded(true);setError(error);});},[]);if(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error.message]});}else if(!isLoaded){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}else{return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"ul\",{children:categories.map(function(category){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/categories/\".concat(category),children:category})});})})});}};export default Categories;","map":{"version":3,"sources":["/media/revgeek/Data/projects/opensource/chuck_norris_jokesAPI/src/components/jokescategories.js"],"names":["React","useState","useEffect","Link","Categories","error","setError","isLoaded","setIsLoaded","categories","setCategories","fetch","then","res","json","data","message","map","category"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAqB,kBAArB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAErB,cAA0BH,QAAQ,CAAC,IAAD,CAAlC,wCAAOI,KAAP,eAAcC,QAAd,eACA,eAAgCL,QAAQ,CAAC,KAAD,CAAxC,yCAAOM,QAAP,eAAiBC,WAAjB,eACA,eAAoCP,QAAQ,CAAC,EAAD,CAA5C,yCAAOQ,UAAP,eAAmBC,aAAnB,eAEAR,SAAS,CAAC,UAAM,CACZS,KAAK,CAAC,6CAAD,CAAL,CACKC,IADL,CACU,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADb,EAEKF,IAFL,CAGQ,SAACG,IAAD,CAAU,CACNP,WAAW,CAAC,IAAD,CAAX,CACAE,aAAa,CAACK,IAAD,CAAb,CACH,CANT,CAOQ,SAACV,KAAD,CAAW,CACPG,WAAW,CAAC,IAAD,CAAX,CACAF,QAAQ,CAACD,KAAD,CAAR,CACH,CAVT,EAYD,CAbM,CAaJ,EAbI,CAAT,CAeE,GAAIA,KAAJ,CAAW,CACT,mBAAO,iCAAaA,KAAK,CAACW,OAAnB,GAAP,CACC,CAFH,IAES,IAAI,CAACT,QAAL,CAAe,CAClB,mBAAO,mCAAP,CACH,CAFM,IAEA,CACH,mBACI,kCACI,oBACKE,UAAU,CAACQ,GAAX,CAAe,SAAAC,QAAQ,qBACxB,iCACI,KAAC,IAAD,EAAM,EAAE,uBAAiBA,QAAjB,CAAR,UAAsCA,QAAtC,EADJ,EADwB,EAAvB,CADL,EADJ,EADJ,CAWH,CACR,CAtCD,CAuCA,cAAed,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Categories = () => {\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [categories, setCategories] = useState([]);\n\n    useEffect(() => {\n        fetch(\"https://api.chucknorris.io/jokes/categories\")\n            .then(res => res.json())\n            .then(\n                (data) => {\n                    setIsLoaded(true);\n                    setCategories(data);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n      }, [])\n\n      if (error) {\n        return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return (\n                <div>\n                    <ul>\n                        {categories.map(category => (\n                        <li>\n                            <Link to={`/categories/${category}`}>{category}</Link>\n                        </li>\n                        ))}\n                    </ul>\n                </div>\n            );\n        }\n}\nexport default Categories;"]},"metadata":{},"sourceType":"module"}